@{
    ViewData["Title"] = "Profile";
}
@using CCMS.BLL.ModelVM.Patient;
@using CCMS.DAL.Entities
@model PatientDTO
<link rel="stylesheet" href="https://cdn.datatables.net/2.3.2/css/dataTables.dataTables.css" />
<link rel="stylesheet" href="https://cdn.datatables.net/responsive/3.0.2/css/responsive.dataTables.css" />
@section HeaderButtons {
    <!-- HOT HENA ENO YEGEB KOL EL DOCTORS WE YE5TAR BE EL DEPARTMENT WE KEDA -->
    <li><a href="@Url.Action("Index", "Home")#departments">Departments</a></li>
    <li><a href="#doctors">Doctors</a></li>
    <li><a href="#footer">Contact</a></li>
    <li><a href="@Url.Action("Index", "Home")">Logout</a></li>
}

<!-- Profile 1 - Bootstrap Brain Component -->
<section class="bg-light py-3 py-md-5 py-xl-8">

    <div class="container">
        <div class="row gy-4 gy-lg-0">
            <div class="col-12 col-lg-4 col-xl-3">
                <div class="row gy-4">
                    <div class="col-12">
                        <div class="card widget-card border-light shadow-sm">
                            <div class="card-header text-bg-primary">Welcome, @Model.GetFullName()</div>
                            <div class="card-body">
                                <div class="text-center mb-3">
                                    <!-- PUT PATIENT PICTURE -->
                                    <img src="./assets/img/profile-img-1.jpg" class="img-fluid rounded-circle" alt="Luna John">
                                </div>
                                @* change to the name of the patient *@
                                <h5 class="text-center mb-1">@Model.GetFullName()</h5>

                                <p class="text-center text-secondary mb-4">patient</p>

                                <div class="d-grid m-0">
                                    
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
            </div>
            <div class="col-12 col-lg-8 col-xl-9">
                <div class="card widget-card border-light shadow-sm">
                    <div class="card-body p-4">
                        <ul class="nav nav-tabs" id="profileTab" role="tablist">
                            <li class="nav-item" role="presentation">
                                <button class="nav-link active" id="profile-tab" data-bs-toggle="tab" data-bs-target="#profile-tab-pane" type="button" role="tab" aria-controls="profile-tab-pane" aria-selected="true">Profile</button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="book-appointment-tab" data-bs-toggle="tab" data-bs-target="#book-appointment-tab-pane" type="button" role="tab" aria-controls="book-appointment-tab-pane" aria-selected="false">Book Appointment</button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="appointments-tab" data-bs-toggle="tab" data-bs-target="#appointments-tab-pane" type="button" role="tab" aria-controls="appointments-tab-pane" aria-selected="false">Appointments</button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="additional-info-tab" data-bs-toggle="tab" data-bs-target="#additional-info-tab-pane" type="button" role="tab" aria-controls="additional-info-tab-pane" aria-selected="false">Additional Info</button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="password-tab" data-bs-toggle="tab" data-bs-target="#password-tab-pane" type="button" role="tab" aria-controls="password-tab-pane" aria-selected="false">Change Password</button>
                            </li>
                        </ul>
                        <div class="tab-content pt-4" id="profileTabContent">
                            <div class="tab-pane fade show active" id="profile-tab-pane" role="tabpanel" aria-labelledby="profile-tab" tabindex="0">
                                <form action="#!" class="row gy-3 gy-xxl-4">
                                    <div class="col-12">
                                        <div class="row gy-2">
                                            <label class="col-12 form-label m-0">Profile Image</label>
                                            <div class="col-12">
                                                <!-- ADD PATIENT PICTURE -->
                                                <img src="./assets/img/profile-img-1.jpg" class="img-fluid" alt="Luna John">
                                            </div>
                                            <div class="col-12">
                                                <a href="#!" class="d-inline-block bg-primary link-light lh-1 p-2 rounded">
                                                    <i class="bi bi-upload"></i>
                                                </a>
                                                <a href="#!" class="d-inline-block bg-danger link-light lh-1 p-2 rounded">
                                                    <i class="bi bi-trash"></i>
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-12 col-md-6">
                                        <input asp-for="UID" type="hidden" class="form-control" id="UID" value="@Model.UID">
                                        <label for="inputFirstName" class="form-label">First Name</label>
                                        <input asp-for="FName" type="text" class="form-control" id="inputFirstName" value="@Model.FName">
                                    </div>
                                    <div class="col-12 col-md-6">
                                        <label for="inputLastName" class="form-label">Last Name</label>
                                        <input asp-for="LName" type="text" class="form-control" id="inputLastName" value="@Model.LName">
                                    </div>
                                    <div class="col-12 col-md-6">
                                        
                                        <label for="inputbloodtype" class="form-label">Blood Type</label>
                                        <select asp-for="BloodType" class="form-select" id="inputbloodtype" name="bloodtype" value="@Model.BloodType">
                                            <option value="A_NEG">A-</option>
                                            <option value="A_POS">A+</option>
                                            <option value="B_NEG">B-</option>
                                            <option value="B_POS">B+</option>
                                            <option value="O_NEG">O-</option>
                                            <option value="O_POS">O+</option>
                                        </select>
                                    </div>
                                    <div class="col-12 col-md-6">
                                        <label for="inputSSN" class="form-label">SSN</label>
                                        <input asp-for="Ssn" type="text" class="form-control" id="inputSkills" value="@Model.Ssn">
                                    </div>
                                    <div class="col-12 col-md-6">
                                        <label for="inputGender" class="form-label">Gender</label>
                                        <select asp-for="Gender" class="form-select" id="inputGender" name="gender" value="@Model.Gender">
                                            <option value="Male">Male</option>
                                            <option value="Female">Female</option>
                                        </select>
                                    </div>
                                    <div class="col-12 col-md-6">
                                        <label for="inputBirthdate" class="form-label">Birthdate</label>
                                        <input asp-for="BirthDate" type="date" class="form-control" id="inputBirthdate" name="birthdate" value="@Model.BirthDate">
                                    </div>
                                    <div class="col-12 col-md-6">
                                        <label for="inputPhone" class="form-label">Phone</label>
                                        <input asp-for="PhoneNumbers" type="tel" class="form-control" id="inputPhone" value="@Model.PhoneNumbers.FirstOrDefault()">
                                    </div>
                                    <div class="col-12 col-md-6">
                                        <!-- NO EMAIL LESA -->
                                        <label for="inputEmail" class="form-label">Email</label>
                                        <input type="email" class="form-control" id="inputEmail" value="leo@example.com">
                                    </div>
                                    <div class="col-12 col-md-6">
                                        <label for="inputAddress" class="form-label">Address</label>
                                        <input asp-for="Addresses" type="text" class="form-control" id="inputAddress" value="@Model.Addresses.FirstOrDefault()">
                                    </div>
                                    
                                    
                                    <div class="col-12">
                                        <button type="submit" class="btn btn-primary" asp-controller="Patient" asp-action="EditPatientProfile" asp-route="@Model">Save Changes</button>
                                    </div>
                                </form>
                            </div>
                            <div class="tab-pane fade" id="book-appointment-tab-pane" role="tabpanel" aria-labelledby="book-appointment-tab" tabindex="0">
                                <h5>Book Appointment</h5>
                                <form id="bookAppointmentForm" class="row gy-3">
                                    <div class="col-12 col-md-6">
                                        <label for="selectSpecialty" class="form-label">Select Specialty</label>
                                        <select class="form-select" id="selectSpecialty">
                                            <option value="">Choose...</option>
                                            @foreach (var specialty in ViewBag.Specializations as List<string>)
                                            {
                                                <option value="@specialty">@specialty</option>
                                            }
                                        </select>
                                    </div>
                                    <div class="col-12 col-md-6">
                                        <label for="selectDoctor" class="form-label">Select Doctor</label>
                                        <select class="form-select" id="selectDoctor" disabled>
                                            <option value="">Choose a specialty first...</option>
                                        </select>
                                    </div>
                                    <div class="col-12 col-md-6">
                                        <label for="selectTime" class="form-label">Select Time</label>
                                        <select class="form-select" id="selectTime" disabled>
                                            <option value="">Choose a doctor first...</option>
                                        </select>
                                    </div>
                                    <div class="col-12 col-md-6">
                                        <label for="selectRoom" class="form-label">Select Room</label>
                                        <select class="form-select" id="selectRoom" disabled>
                                            <option value="">Choose a time first...</option>
                                        </select>
                                    </div>
                                    <div class="col-12" id="priceSection" style="display:none;">
                                        <p class="fw-bold">Price: $80</p>
                                        <button type="submit" class="btn btn-primary" id="bookButton">Book</button>
                                    </div>
                                </form>
                            </div>
                            <div class="tab-pane fade" id="appointments-tab-pane" role="tabpanel" aria-labelledby="appointments-tab" tabindex="0">
                                <h5>Appointments</h5>
                                <table id="appointmentsTable" class="display" style="width:100%">
                                    <thead>
                                        <tr>
                                            <th>Price</th>
                                            <th>Date</th>
                                            <th>Prescription</th>
                                            <th>Doctor</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                            @foreach(var item in ViewBag.Appointment as List<Book>)
                                            {
                                                <tr>
                                                    <td>@item.Price</td>
                                                    <td>@item.BookDate</td>
                                                    <td>@item.Prescription</td>
                                                    <td>@item.Doctor.GetFullName()</td>
                                                </tr>
                                            }
                                    </tbody>
                                </table>
                            </div>
                            <div class="tab-pane fade" id="additional-info-tab-pane" role="tabpanel" aria-labelledby="additional-info-tab" tabindex="0">
                                <h5>Family Members</h5>
                                
                                <table id="familyMembersTable" class="display" style="width:100%">
                                    <thead>
                                        <tr>
                                            <th>Name</th>
                                            <th>SSN</th>
                                            <th>Phone</th>
                                            <th>Gender</th>
                                            <th>Relationship</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in ViewBag.FamilyMembers as List<(FamilyMember FamilyMember, string Relationship)>)
                                        {
                                            <tr>
                                                <td>@item.FamilyMember.Name</td>
                                                <td>@item.FamilyMember.Ssn</td>
                                                <td>@item.FamilyMember.PhoneNumber</td>
                                                <td>@item.FamilyMember.Gender</td>
                                                <td>@item.Relationship</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                                <button class="btn btn-primary mb-2" data-bs-toggle="modal" data-bs-target="#addFamilyMemberModal">Add a Family Member</button>
                                <h5 class="mt-4">Medical History</h5>
                                
                                <table id="medicalHistoryTable" class="display" style="width:100%">
                                    <thead>
                                        <tr>
                                            <th>Family History</th>
                                            <th>Disease Name</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var history in ViewBag.MedicalHistory as List<MedicalHistory>)
                                        {
                                            <tr>
                                                <td>@(history.IsAcceptable ? "Yes" : "No")</td>
                                                <td>@history.DiseaseName</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                                <button class="btn btn-primary mb-2" data-bs-toggle="modal" data-bs-target="#addMedicalRecordModal">Add a Medical Record</button>
                                <h5 class="mt-4">Scans</h5>
                                <table id="scansTable" class="display" style="width:100%">
                                    <thead>
                                        <tr>
                                            <th>Scan Type</th>
                                            <th>Scan Tech</th>
                                            <th>Scan Date</th>
                                            <th>Results</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var scan in ViewBag.Scans as List<Scan>)
                                        {
                                            <tr>
                                                <td>@scan.ScanType</td>
                                                <td>@scan.SDate.ToString("yyyy-MM-dd")</td>
                                                @if(scan.Results == null)
                                                {
                                                    <td>No Results yet</td>
                                                }
                                                else
                                                {
                                                    <td>
                                                    <a href="@scan.Results" class="btn btn-success btn-sm">Download</a>
                                                    </td>
                                                }
                                            </tr>

                                     

                                        }
                                    </tbody>
                                </table>
                            </div>
                            <div class="tab-pane fade" id="password-tab-pane" role="tabpanel" aria-labelledby="password-tab" tabindex="0">
                                <form action="#!">
                                    <div class="row gy-3 gy-xxl-4">
                                        <div class="col-12">
                                            <label for="currentPassword" class="form-label">Current Password</label>
                                            <input type="password" class="form-control" id="currentPassword">
                                        </div>
                                        <div class="col-12">
                                            <label for="newPassword" class="form-label">New Password</label>
                                            <input type="password" class="form-control" id="newPassword">
                                        </div>
                                        <div class="col-12">
                                            <label for="confirmPassword" class="form-label">Confirm Password</label>
                                            <input type="password" class="form-control" id="confirmPassword">
                                        </div>
                                        <div class="col-12">
                                            <button type="submit" class="btn btn-primary">Change Password</button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</section>

<!-- Add Family Member Modal -->
<div class="modal fade" id="addFamilyMemberModal" tabindex="-1" aria-labelledby="addFamilyMemberModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addFamilyMemberModalLabel">Add Family Member</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addFamilyMemberForm">
                    <div class="mb-3">
                        <label for="familyMemberName" class="form-label">Name</label>
                        <input type="text" class="form-control" id="familyMemberName" required>
                    </div>
                    <div class="mb-3">
                        <label for="familyMemberSSN" class="form-label">SSN</label>
                        <input type="text" class="form-control" id="familyMemberSSN" maxlength="14" required>
                    </div>
                    <div class="mb-3">
                        <label for="familyMemberPhone" class="form-label">Phone Number</label>
                        <input type="tel" class="form-control" id="familyMemberPhone" required>
                    </div>
                    <div class="mb-3">
                        <label for="familyMemberGender" class="form-label">Gender</label>
                        <select class="form-select" id="familyMemberGender" required>
                            <option value="">Choose...</option>
                            <option value="Male">Male</option>
                            <option value="Female">Female</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="familyMemberRelationship" class="form-label">Relationship</label>
                        <input type="text" class="form-control" id="familyMemberRelationship" placeholder="e.g., Father, Mother, Brother, Sister" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveFamilyMember">Add Family Member</button>
            </div>
        </div>
    </div>
</div>

<!-- Add Medical Record Modal -->
<div class="modal fade" id="addMedicalRecordModal" tabindex="-1" aria-labelledby="addMedicalRecordModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addMedicalRecordModalLabel">Add Medical Record</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addMedicalRecordForm">
                    <div class="mb-3">
                        <label for="diseaseName" class="form-label">Disease Name</label>
                        <input type="text" class="form-control" id="diseaseName" required>
                    </div>
                    <div class="mb-3">
                        <label for="familyHistory" class="form-label">Family History</label>
                        <select class="form-select" id="familyHistory" required>
                            <option value="">Choose...</option>
                            <option value="true">Yes</option>
                            <option value="false">No</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveMedicalRecord">Add Medical Record</button>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.datatables.net/2.3.2/js/dataTables.js"></script>
<script src="https://cdn.datatables.net/responsive/3.0.2/js/dataTables.responsive.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        let familyTable = new DataTable('#familyMembersTable', { responsive: true });
        let historyTable = new DataTable('#medicalHistoryTable', { responsive: true });
        let scansTable = new DataTable('#scansTable', { responsive: true });
        let appointmentsTable = new DataTable('#appointmentsTable', { responsive: true });
        // Book Appointment form logic
        function checkBookFields() {
            var specialty = document.getElementById('selectSpecialty').value;
            var doctor = document.getElementById('selectDoctor').value;
            var time = document.getElementById('selectTime').value;
            var room = document.getElementById('selectRoom').value;
            var priceSection = document.getElementById('priceSection');
            if (specialty && doctor && time && room) {
                priceSection.style.display = '';
            } else {
                priceSection.style.display = 'none';
            }
        }
        // Cascading dropdown functionality
        document.getElementById('selectSpecialty').addEventListener('change', function() {
            const specialty = this.value;
            const doctorSelect = document.getElementById('selectDoctor');
            const timeSelect = document.getElementById('selectTime');
            const roomSelect = document.getElementById('selectRoom');
            
            // Reset dependent dropdowns
            timeSelect.disabled = true;
            timeSelect.innerHTML = '<option value="">Choose a doctor first...</option>';
            roomSelect.disabled = true;
            roomSelect.innerHTML = '<option value="">Choose a time first...</option>';
            
            if (specialty && specialty !== '') {
                // Enable doctor dropdown and show loading
                doctorSelect.disabled = false;
                doctorSelect.innerHTML = '<option value="">Loading doctors...</option>';
                
                // Fetch doctors by specialization
                fetch(`/Patient/GetDoctorsBySpecialization?specialization=${encodeURIComponent(specialty)}`)
                    .then(response => response.json())
                    .then(doctors => {
                        doctorSelect.innerHTML = '<option value="">Choose a doctor...</option>';
                        doctors.forEach(doctor => {
                            const option = document.createElement('option');
                            option.value = doctor.id;
                            option.textContent = doctor.name;
                            doctorSelect.appendChild(option);
                        });
                    })
                    .catch(error => {
                        console.error('Error fetching doctors:', error);
                        doctorSelect.innerHTML = '<option value="">Error loading doctors</option>';
                    });
            } else {
                // Disable and reset doctor dropdown
                doctorSelect.disabled = true;
                doctorSelect.innerHTML = '<option value="">Choose a specialty first...</option>';
            }
            
            checkBookFields();
        });

        document.getElementById('selectDoctor').addEventListener('change', function() {
            const doctorId = this.value;
            const timeSelect = document.getElementById('selectTime');
            const roomSelect = document.getElementById('selectRoom');
            
            // Reset dependent dropdowns
            roomSelect.disabled = true;
            roomSelect.innerHTML = '<option value="">Choose a time first...</option>';
            
            if (doctorId && doctorId !== '') {
                // Enable time dropdown and show loading
                timeSelect.disabled = false;
                timeSelect.innerHTML = '<option value="">Loading time slots...</option>';
                
                // Fetch doctor working slots
                fetch(`/Patient/GetDoctorWorkingSlots?doctorId=${doctorId}`)
                    .then(response => response.json())
                    .then(timeSlots => {
                        timeSelect.innerHTML = '<option value="">Choose a time...</option>';
                        timeSlots.forEach(slot => {
                            const option = document.createElement('option');
                            option.value = slot;
                            option.textContent = slot;
                            timeSelect.appendChild(option);
                        });
                    })
                    .catch(error => {
                        console.error('Error fetching time slots:', error);
                        timeSelect.innerHTML = '<option value="">Error loading time slots</option>';
                    });
            } else {
                // Disable and reset time dropdown
                timeSelect.disabled = true;
                timeSelect.innerHTML = '<option value="">Choose a doctor first...</option>';
            }
            
            checkBookFields();
        });

        document.getElementById('selectTime').addEventListener('change', function() {
            const timeSlot = this.value;
            const roomSelect = document.getElementById('selectRoom');
            
            if (timeSlot && timeSlot !== '') {
                // Enable room dropdown and show loading
                roomSelect.disabled = false;
                roomSelect.innerHTML = '<option value="">Loading available rooms...</option>';
                
                // Fetch available rooms
                fetch('/Patient/GetAvailableRooms')
                    .then(response => response.json())
                    .then(rooms => {
                        roomSelect.innerHTML = '<option value="">Choose a room...</option>';
                        rooms.forEach(room => {
                            const option = document.createElement('option');
                            option.value = room.id;
                            option.textContent = `Room ${room.number}`;
                            roomSelect.appendChild(option);
                        });
                    })
                    .catch(error => {
                        console.error('Error fetching rooms:', error);
                        roomSelect.innerHTML = '<option value="">Error loading rooms</option>';
                    });
            } else {
                // Disable and reset room dropdown
                roomSelect.disabled = true;
                roomSelect.innerHTML = '<option value="">Choose a time first...</option>';
            }
            
            checkBookFields();
        });

        document.getElementById('selectRoom').addEventListener('change', checkBookFields);

        // Book appointment form submission
        document.getElementById('bookButton').addEventListener('click', function(e) {
            e.preventDefault();
            
            const specialty = document.getElementById('selectSpecialty').value;
            const doctorId = document.getElementById('selectDoctor').value;
            const timeSlot = document.getElementById('selectTime').value;
            const roomId = document.getElementById('selectRoom').value;
            const patientId = @Model.UID;
            const price = 80;
            
            if (specialty && doctorId && timeSlot && roomId) {
                // Disable button and show loading
                this.disabled = true;
                this.textContent = 'Booking...';
                
                // Create booking
                fetch('/Patient/CreateBook', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: `patientId=${patientId}&doctorId=${doctorId}&timeSlot=${encodeURIComponent(timeSlot)}&roomId=${roomId}&price=${price}`
                })
                .then(response => response.json())
                .then(result => {
                    if (result.success) {
                        alert('Appointment booked successfully!');
                        // Reset form
                        document.getElementById('bookAppointmentForm').reset();
                        document.getElementById('selectDoctor').disabled = true;
                        document.getElementById('selectTime').disabled = true;
                        document.getElementById('selectRoom').disabled = true;
                        document.getElementById('priceSection').style.display = 'none';
                        // Refresh appointments tab
                        location.reload();
                    } else {
                        alert('Failed to book appointment. Please try again.');
                    }
                })
                .catch(error => {
                    console.error('Error booking appointment:', error);
                    alert('Error booking appointment. Please try again.');
                })
                .finally(() => {
                    this.disabled = false;
                    this.textContent = 'Book';
                });
            }
        });
        
        // Family Member Modal Form Submission
        document.getElementById('saveFamilyMember').addEventListener('click', function() {
            const form = document.getElementById('addFamilyMemberForm');
            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }

            const formData = {
                PatientId: @Model.UID,
                Name: document.getElementById('familyMemberName').value,
                SSN: document.getElementById('familyMemberSSN').value,
                PhoneNumber: document.getElementById('familyMemberPhone').value,
                Gender: document.getElementById('familyMemberGender').value,
                Relationship: document.getElementById('familyMemberRelationship').value
            };

            fetch('/Patient/AddFamilyMember', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Close modal and reset form
                    const modal = bootstrap.Modal.getInstance(document.getElementById('addFamilyMemberModal'));
                    modal.hide();
                    form.reset();
                    // Refresh the page to show new family member
                    location.reload();
                } else {
                    alert('Error adding family member: ' + (data.error || 'Unknown error'));
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error adding family member');
            });
        });

        // Medical Record Modal Form Submission
        document.getElementById('saveMedicalRecord').addEventListener('click', function() {
            const form = document.getElementById('addMedicalRecordForm');
            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }

            const formData = {
                PatientId: @Model.UID,
                DiseaseName: document.getElementById('diseaseName').value,
                FamilyHistory: document.getElementById('familyHistory').value === 'true'
            };

            fetch('/Patient/AddMedicalRecord', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Close modal and reset form
                    const modal = bootstrap.Modal.getInstance(document.getElementById('addMedicalRecordModal'));
                    modal.hide();
                    form.reset();
                    // Refresh the page to show new medical record
                    location.reload();
                } else {
                    alert('Error adding medical record: ' + (data.error || 'Unknown error'));
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error adding medical record');
            });
        });
    });
</script>